name: Build Docker 5 latest releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'

jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.set-tags.outputs.tags }}
    steps:
      - id: set-tags
        run: |
          #          TAGS=$(curl -s https://api.github.com/repos/moby/moby/releases | jq -r '.[].tag_name' | grep -E '^v[0-9]' | head -n 5 | jq -R . | jq -cs .)
          #echo "Fetched tags: $TAGS"
          #printf "tags=%s\n" "$TAGS" >> "$GITHUB_OUTPUT"
          TAGS=$(curl -s https://api.github.com/repos/moby/moby/releases \
            | jq -r '.[].tag_name' \
            | grep -E '^v[0-9]' \
            | sort -V \
            | tail -n 5 \
            | jq -R . | jq -cs .)
          echo "tags=$TAGS" >> "$GITHUB_OUTPUT"

  build-binaries:
    needs: get-tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-tags.outputs.tags) }}
    env:
      DOCKER_VERSION: ${{ matrix.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          #          ref: ${{ matrix.tag }}
          ref: main

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build Docker Binaries
        run: |
          docker buildx build --platform linux/loong64 -t docker-static-loong64:${{ matrix.tag }} --build-arg DOCKER_VERSION=${{ env.DOCKER_VERSION }} -f binaries/Dockerfile . --load

      - name: Upload Binary Artifacts
        run: |
          mkdir -p dist && cp -r ./docker/* dist/ || true
          ls -al dist
          gh release upload ${{ matrix.tag }} -R ${{ github.repository }} dist/* || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-deb:
    needs: get-tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-tags.outputs.tags) }}
        distro: [ 'debian' ]
        suite: [ 'trixie' ]
    env:
      DOCKER_VERSION: ${{ matrix.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build Docker DEB Package
        run: |
          sudo chmod 755 ./build-docker.sh
          ./build-docker.sh --distro ${{ matrix.distro }} --suite ${{ matrix.suite }}

      - name: Upload DEB Package
        run: |
          ls -al dist
          gh release upload ${{ matrix.tag }} -R ${{ github.repository }} dist/*.deb || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-rpm:
    needs: get-tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-tags.outputs.tags) }}
        distro: [ 'anolis', 'opencloudos' , 'openeuler' ]
    env:
      DOCKER_VERSION: ${{ matrix.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Determine Suite
        id: set-suite
        run: |
          case "${{ matrix.distro }}" in
            anolis|opencloudos)
              echo "suite=23" >> $GITHUB_OUTPUT
              ;;
            openeuler)
              echo "suite=2403" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Build Docker RPM Package
        run: |
          sudo chmod 755 ./build-docker.sh
          ./build-docker.sh --distro ${{ matrix.distro }} --suite ${{ matrix.suite }}

      - name: Upload RPM Package
        run: |
          ls -al dist
          gh release upload ${{ matrix.tag }} -R ${{ github.repository }} dist/SRPMS/* dist/RPMS/loongarch64/* || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

